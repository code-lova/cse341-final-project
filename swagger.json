{
  "swagger": "2.0",
  "info": {
    "title": "E-Learning Course Management API",
    "description": "\n    API for managing courses, enrollment, progress and users.\n    \n    **Authentication Process:**\n    - Visit: [Google OAuth Login](https://cse341-final-project-r9c4.onrender.com/api/auth/google)\n    - Authenticate and get a token from the response.\n    - Click **Authorize** (ðŸ”‘) in Swagger UI and enter your token as: **Bearer your_auth_token**.\n    - Now, all secured endpoints will be accessible.",
    "version": "1.0.0"
  },
  "host": "cse341-final-project-r9c4.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "User management endpoints"
    },
    {
      "name": "Courses",
      "description": "Course management endpoints"
    },
    {
      "name": "Enrollment",
      "description": "Student enrollment endpoints"
    },
    {
      "name": "Progress",
      "description": "Student progress endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "\n      **Authentication Required**\n      - First, visit: [Google OAuth Login](https://cse341-final-project-r9c4.onrender.com/api/auth/google)\n      - Copy the returned token.\n      - Click **Authorize** (ðŸ”‘) at the top and enter: **Bearer your_auth_token**."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/courses/create": {
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Create a new Course",
        "description": "Creates a new course detail. Requires Google OAuth2 authentication",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "course details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/courseInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "500": {
            "description": "Failed to create course"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/courses/update/{id}": {
      "put": {
        "tags": [
          "Courses"
        ],
        "summary": "Update course by Id (Instructor only)",
        "description": "Updates an existing course. Requires Google OAuth2 authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Course ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated course details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/courseInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/courses/": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Retrieve all courses",
        "description": "Fetches all courses from the database. Will Requires Google OAuth2 authentication.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of courses retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "No course data found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/courses/{id}": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Retrieve a course by ID",
        "description": "Fetches course by ID. Will Requires Google OAuth2 authentication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the course to retrieve"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Course details retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to fetch course details"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Courses"
        ],
        "summary": "Delete a Course (Instructor only)",
        "description": "Deletes a course by ID. Will Requires Google OAuth2 authentication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the course to delete"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "course deleted successfully"
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "course not found"
          },
          "500": {
            "description": "Failed to delete course"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user. EveryOne can create an account",
        "description": "Creates a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Failed to create user"
          }
        }
      }
    },
    "/api/users/update/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by Id. Accessible to all logged-in users",
        "description": "Updates an existing User. Will Requires Google OAuth2 authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated User details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve all User",
        "description": "Fetches all users from the database. Will Requires Google OAuth2 authentication",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of User retrieved successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "No user data found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve a User by ID..",
        "description": "Fetches User details by ID. Will Requires Google OAuth2 authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the User to retrieve"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to fetch user details"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a Users.",
        "description": "Deletes a User from the database by ID. Will Requires Google OAuth2 authentication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the Users to delete"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users deleted successfully"
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "Users not found"
          },
          "500": {
            "description": "Failed to delete Users"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/enrollments/create": {
      "post": {
        "tags": [
          "Enrollment"
        ],
        "summary": "Enroll for a new Course",
        "description": "Creates a new enrollment detail. Requires Google OAuth2 authentication",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "enrollment details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enrollmentInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "Course not found"
          },
          "409": {
            "description": "Student already enrolled in this course"
          },
          "500": {
            "description": "Failed to create course"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/enrollments/update/{id}": {
      "put": {
        "tags": [
          "Enrollment"
        ],
        "summary": "Update enrollment details",
        "description": "Updates an existing enrollment by ID. Requires Google OAuth2 authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the enrollment to update"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated enrollment details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enrollmentInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enrollment updated successfully"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "Enrollment or Course not found"
          },
          "409": {
            "description": "Already enrolled in this course"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/enrollments/": {
      "get": {
        "tags": [
          "Enrollment"
        ],
        "summary": "Retrieve all enrollment",
        "description": "Fetches all enrollment from the database. Will Requires Google OAuth2 authentication.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of student enrollment retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Enrollment"
            }
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "No enrollment data found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/enrollments/{id}": {
      "delete": {
        "tags": [
          "Enrollment"
        ],
        "summary": "Unenroll from a course (Must be authenticated and Instructors only)",
        "description": "Removes an enrollment by ID. Requires Google OAuth2 authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the enrollment to delete"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Enrollment deleted successfully"
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "Enrollment not found"
          },
          "500": {
            "description": "Failed to delete enrollment"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/progress/create": {
      "post": {
        "tags": [
          "Progress"
        ],
        "summary": "Create course progress (Instructors only)",
        "description": "Create the progress percentage for a student in a specific course. Requires Google OAuth2 authentication",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Progress details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/progressInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Progress created successfully"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to update progress"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/progress/": {
      "get": {
        "tags": [
          "Progress"
        ],
        "summary": "Retrieve student progress",
        "description": "Fetches the progress percentage of all students in a specific course, Requires Google OAuth2 authentication.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Progress retrieved successfully"
          },
          "404": {
            "description": "Progress data not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/progress/{id}": {
      "put": {
        "tags": [
          "Progress"
        ],
        "summary": "Update student progress (Instructor only)",
        "description": "Updates an existing progress by ID. Requires Google OAuth2 authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Progress ID to update"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated progress details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/progressInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Progress updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "update failed or progress not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Progress"
        ],
        "summary": "Remove a progress report (Must be authenticated and Instructors only)",
        "description": "Removes a progress by ID. Requires Google OAuth2 authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the enrollment to delete"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Progress deleted successfully"
          },
          "401": {
            "description": "Unauthorized: Invalid token or user not authenticated"
          },
          "404": {
            "description": "Progress not found"
          },
          "500": {
            "description": "Failed to delete progress"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "12345673884495"
        },
        "name": {
          "type": "string",
          "example": "John"
        },
        "email": {
          "type": "string",
          "example": "johndoe@example.com"
        },
        "role": {
          "type": "string",
          "example": "student"
        },
        "createdAt": {
          "type": "string",
          "example": "2025-03-17T10:05:00Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2025-03-18T15:02:59.926Z"
        },
        "__v": {
          "type": "number",
          "example": 0
        }
      }
    },
    "UserInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Rebecca Jordan"
        },
        "email": {
          "type": "string",
          "example": "rebecca2009@gmail.com"
        },
        "role": {
          "type": "string",
          "example": "student"
        },
        "password": {
          "type": "string",
          "example": "secure123"
        }
      }
    },
    "Course": {
      "type": "object",
      "properties": {
        "instructor": {
          "type": "string",
          "example": "123664849955"
        },
        "title": {
          "type": "string",
          "example": "CSE-341 Backend Services"
        },
        "description": {
          "type": "string",
          "example": "This is a course that will teach you techniques and ways to use node js to build api."
        },
        "duration": {
          "type": "string",
          "example": "1 Month"
        },
        "amount": {
          "type": "string",
          "example": "0.00"
        },
        "courseType": {
          "type": "string",
          "example": "free"
        },
        "createdAt": {
          "type": "string",
          "example": "2025-04-17T10:05:00Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2025-04-18T13:32:46.952Z"
        },
        "__v": {
          "type": "number",
          "example": 0
        }
      }
    },
    "courseInput": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "BUS-301 Business Test Course"
        },
        "description": {
          "type": "string",
          "example": "This is a course that will teach you how to become effective professionally."
        },
        "duration": {
          "type": "string",
          "example": "2 Month"
        },
        "amount": {
          "type": "string",
          "example": "0.00"
        },
        "courseType": {
          "type": "string",
          "example": "free"
        }
      }
    },
    "Enrollment": {
      "type": "object",
      "properties": {
        "studentId": {
          "type": "string",
          "example": "67d955d87203c86c07e8427a"
        },
        "courseId": {
          "type": "string",
          "example": "67d955d87203c86c07e8427a"
        },
        "createdAt": {
          "type": "string",
          "example": "2025-04-17T10:05:00Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2025-04-18T13:32:46.952Z"
        },
        "__v": {
          "type": "number",
          "example": 0
        }
      }
    },
    "enrollmentInput": {
      "type": "object",
      "properties": {
        "studentId": {
          "type": "string",
          "example": "67ec033a833d5bc4560e4e14"
        },
        "courseId": {
          "type": "string",
          "example": "67f443850e7dbb18d75d60cb"
        }
      }
    },
    "Progress": {
      "type": "object",
      "properties": {
        "studentId": {
          "type": "string",
          "example": "67d955d87203c86c07e8427a"
        },
        "courseId": {
          "type": "string",
          "example": "67d955d87203c86c07e8427a"
        },
        "progressValue": {
          "type": "number",
          "example": 80
        },
        "createdAt": {
          "type": "string",
          "example": "2025-04-17T10:05:00Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2025-04-18T13:32:46.952Z"
        },
        "__v": {
          "type": "number",
          "example": 0
        }
      }
    },
    "progressInput": {
      "type": "object",
      "properties": {
        "studentId": {
          "type": "string",
          "example": "67ec033a833d5bc4560e4e14"
        },
        "courseId": {
          "type": "string",
          "example": "67f443850e7dbb18d75d60cb"
        },
        "progressValue": {
          "type": "number",
          "example": 65
        }
      }
    }
  }
}